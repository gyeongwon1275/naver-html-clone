/* 선택자 -> html 의 tag 를 선택  */

/* 사용하는 이유 : 특정 tag 의 디자인을 관리하려고 */

/* cascade => 덮어씌우다!
부모의 속성을 자식이 가진다. 
*/

*{
    /* 모든 태그가 크기설정이 박스 기준으로 적용 되도록 함 */
    box-sizing: border-box;
}

.relative {
    position: relative;
}

html, body {

    /* 기본 설정되어 있는 margin,padding 제거 */
    margin: 0;
    padding: 0;
}

/* 만약 header nav main 에 CSS 적용할 때는
태그 명도 같이 써 줘야 함! 

header#header-center{

    border: 2px solid darkblue; 
    margin: 0 auto; width: 1080px;
}
*/

.blind {

    position: absolute;
    overflow: hidden;
    clip: rect(0 0 0 0);
    margin:  -1px;
    width: 1px;
    height: 1px;
}


.center-align{
    
    /* border: 2px solid darkblue;  */
    /* px? -> 상대적인 단위
    우저 모니터에 따라 달라진다. 
    콘솔창에서 screen.width screen.height 로 px 를 알 수 있다.   
        m, kg -> 절대단위 
    */
    /* display: block; 일 때만 margin 을 사용해 자식요소를 가운데 정렬가능 */
    /* display:inline-block 는 margin 을 가지지 않기 때문! */
    /* inline => block 과 달리 컨텐츠의 크기만큼만 너비차지 => 크기 지정 못함!! */
    /* inline 은 width height 지정 못함, 빈 공간이 없음  */
    /* block => 너비 전체 차지 */


    margin: 0 auto; 
    width: 1080px;

}

#search-ranking {
    position: absolute;
    top: 16px;
    right: 100px;
}

/* float */

/* 지정한 요소를 붕 띄워서 근처 태그가 공간을 차지하게 함  */

/* id가 header-search 인 div 의 자식인 h1  */
div#header-search h1{

width: 200px;
/* display: block; => margin 을 가진다.  */
display: inline-block;
width: 198px;
height: 48px;
background-image: url("./sp_search.png");

/* 이미지가 반복되어 출력되는 것을 방지 */
background-repeat: no-repeat;


/* background-position: (가로방향위치) (세로방향위치); */
/* 네이버 로고와 같이 딸려온 이미지 보이지 않게 위치 조정함 */
background-position: -4px -10px;
/* vertical-align: middle;
position: relative;
top: -6px; */
/* text-indent -> text 들여쓰기 ex tab 느낌 */
text-indent: 100%;
/* overflow: hidden; => 자식요소가 부모보다 클 때 넘친 부분을 숨김  */
/* overflow: auto => 자식요소가 부모보다 클 때 스크롤을 생성 */

overflow: hidden;
}
/* 자손 전체 선택  */


div#header-search > h1 > span {
    
    display: none;

}
header {

    height: 160px;
}

#header-search {

    /* 다른 요소가 float 로 설정된 id header-top 을 침범하지 않도록 설정*/
    /* 근처의 float 요소와 공간이 겹치지 않도록 설정!! */
    clear: both;
    padding-top: 12px;
   
}

div#header-search h2{

    /* display: none; => 화면상에서 공간을 차지하지 않고 안보이게 설정  */
    
    display: none;
    /* visibility: hidden; => 화면상에서 공간을 차지하지만 보이지는 않게 설정  */
} 

#header-top{

    float: right;
    margin-top: 8px;
}

#header-top span {
    color: #888;
    /* 글자사이 가로 간격 */
    letter-spacing: -1px;
    font-size: 11px;
    /* 글자 높이  */
    line-height: 22px;

}


#header-search fieldset {

    margin-left: 20px;
    padding: 10px;
    display: inline-block;
    width: 521px;
    height: 49px;
    border: 2px solid #03cf5d;
    /* vertical-align CSS 속성은 inline 또는 table-cell box에서의 수직 정렬을 지정합니다 */
    vertical-align: middle;
    /* position 을 지정해야 하위의 button 이 fieldset 을 기준으로
    위치가 지정 될 수 있음  */

    /* 현재 위치에서 상대적으로 위치를 조정한다.  */
    
    position: relative;
}

#header-search fieldset input {

    vertical-align: top;
    border: none;
    /* input box 에는 기본적으로 padding 이 설정되어 있다. 
    브라우저 마다 기본 설정이 달라 padding 을 0 으로 설정한다. 
    */
    /* input 은 기본적으로 inline block 이다.  */
    width: 405px;
    height: 23px;
    padding: 0;
    /* input box 입력시 나타나는 테두리 없애줌  */
    outline: none;
}


#header-search fieldset button {

    width: 48px;
    height: 48px;
     /* 버튼에 미리 설정되어 있는 css 제거해야함  */
     border: none;
     padding: 0;
     /* 검색버튼 표시하기 위해 설정 */
     background-color: #03cf5d;
     /* Block format context */

     /* 쌓임 맥락  */
     /* 컨테이닝 블록의 모든 것 */
     /* absolute
     요소를 일반적인 문서 흐름에서 제거하고, 
     페이지 레이아웃에 공간도 배정하지 않습니다. 
     대신 가장 가까운 위치 지정 조상 요소에 대해 상대적으로 배치합니다. */

     /* position 속성이 absolute인 경우, 
     컨테이닝 블록은 position 속성 값이 
     static이 아닌(fixed, absolute, relative, sticky) 
     가장 가까운 조상의 내부 여백 영역입니다. */
     position: absolute; 
     top: 0;
     right: 0;
     /* 검색 아이콘만 살리기 위해 사용 */

}

#search-image {
    display: inline-block;
    width: 22px;
    height: 22px;
    vertical-align: top;
     background-image: url("./sp_search.png");
     background-position: -3px -60px;
     background-repeat: no-repeat;
     

}

nav {

height: 46px;
border-top: 1px solid #f1f3f6;
border-bottom: 1px solid #d1d8e4;

}

nav ul {

margin: 0;
padding: 16px 0 0 4px;
list-style: none;
/* 메뉴 분리 위해 ul 이 width 100% 차지하지 않도록 함 */
display: inline-block;
}

nav li {

    /* 메일, 까페, 블로그 등을 가로로 쌓이도록 설정함  */
    display: inline-block;
    
}

/* li 중 span 의 첫번째 태그 */
/* 공통되는 속성을 묶음 */
nav li span:first-child {

    height: 16px;
    display: inline-block;
    background-image: url(https://s.pstatic.net/static/www/img/uit/2019/sp_nav.png);
    background-repeat: no-repeat;
    margin-left: 14px;
}

/* li 태그의 첫번째 자식 선택  */
nav li:first-child span:first-child {

width: 25px;
height: 16px;
background-position: 0px -285px;
/* margin-left: 14px; 를 덮어 싀움 */
margin-left: 0;
}

.nav-divider {
    /* 빈공간 처리용 div */
    display: inline-block;
    margin: 18px 16px 0;
    width: 1px;
    height: 14px;
    background: #ebeef3;
}

/* nth-child 는 사실 안쓰는게 좋다. 이유 : 유지보수 하기 힘들 */

nav li:nth-child(2) span:first-child {
    width: 27px;
    background-position: -279px -52px;
}

nav li:nth-child(3) span:first-child {
    width: 40px;
    background-position: -100px -182px;
}

nav li:nth-child(4) span:first-child {
    width: 40px;
    background-position: -101px -156px;
}

nav li:nth-child(5) span:first-child {
    width: 26px;
    background-position: -279px -156px;
}

nav li:nth-child(6) span:first-child {
    width: 25px;
    background-position: -70px -285px;
}


main {
        background-color: #f2f4f7;
        display: inline-block;
        width: 100%;
    
}

.btn_theme {
    position: fixed;
    z-index: 100;
    right: 78px;
    bottom: 19px;
    display: inline-block;
    width: 136px;
    height: 53px;
    cursor: pointer;
    vertical-align: top;
    background-position: -276px -116px;
    background-image: url(https://s.pstatic.net/static/www/img/uit/2020/sp_main.123161.png);
    background-repeat: no-repeat;
    background-size: 471px 442px;
    background-color: transparent;
    border: 0;
    border-radius: 0;
}